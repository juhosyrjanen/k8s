version: '3'

vars:
  json_file: "vm_info.json"
  ignition_path: "ignition"

includes:
  loadbalancer: tasks/loadbalancer.yml
  vms: tasks/vms.yml
  checks: tasks/checks.yml

tasks:
  up:
    desc: "Create and start all VMs"
    cmds:
      - task: vms:generate-ssh-key
      - task: vms:initialize-json
      - task: vms:create-controllers
      - task: vms:create-loadbalancer
      #- task: vms:create-workers
      - task: vms:finalize-json

  cluster:lb:
    desc: "Bootstrap a Kubernetes cluster loadbalancer"
    cmds:
      - task: setup-loadbalancer

  cluster:up:
    desc: "Bootstrap a Kubernetes cluster"
    cmds:

  setup-loadbalancer:
    desc: "Setup the load balancer"
    cmds:
      - task: loadbalancer:setup-loadbalancer

  test-ssh-connections:
    desc: "Test SSH connections to all VMs"
    cmds:
      - |
        if [ -f {{.json_file}} ]; then
          IP_ADDRESSES=$(jq -r '.[].ip' {{.json_file}})
          for IP in $IP_ADDRESSES; do
            echo "Testing SSH connection to $IP..."
            ssh -o StrictHostKeyChecking=no -i {{.ignition_path}}/id_rsa core@$IP "echo âœ… Hello world from \$(hostname)" || echo "SSH connection to $IP failed."
          done
        else
          echo "JSON file {{.json_file}} not found!"
        fi

  down:
    silent: true
    desc: "Destroy and remove all VMs and clean up files"
    cmds:
      - virsh destroy k8s-controller-1 || true
      - virsh destroy k8s-controller-2 || true
      - virsh destroy k8s-controller-3 || true
      - virsh destroy k8s-loadbalancer || true
      - virsh destroy k8s-worker-1 || true
      - virsh destroy k8s-worker-2 || true
      - virsh undefine k8s-controller-1 --remove-all-storage || true
      - virsh undefine k8s-controller-2 --remove-all-storage || true
      - virsh undefine k8s-controller-3 --remove-all-storage || true
      - virsh undefine k8s-loadbalancer --remove-all-storage || true
      - virsh undefine k8s-worker-1 --remove-all-storage || true
      - virsh undefine k8s-worker-2 --remove-all-storage || true
      - rm -f {{.ignition_path}}/config*
      - rm -f {{.ignition_path}}/id_rsa.pub
      - rm -f {{.ignition_path}}/id_rsa
      - rm -rf seed-iso/
      # Cleanup known_hosts file
      - |
        if [ -f {{.json_file}} ]; then
          IP_ADDRESSES=$(jq -r '.[].ip' {{.json_file}})
          for IP in $IP_ADDRESSES; do
            ssh-keygen -f "$HOME/.ssh/known_hosts" -R "$IP" >/dev/null 2>&1 || true
          done
        fi
      - rm -f {{.json_file}}
